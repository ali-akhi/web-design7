{"version":3,"sources":["components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","text1","settext1","text2","settext2","country","setcountry","country2","setcountry2","value1","setvalue1","value2","setvalue2","a","axios","get","result","data","rates","useEffect","getdata","Paper","className","onSubmit","e","preventDefault","TextField","variant","value","onChange","target","autoComplete","FormControl","Select","native","Object","keys","map","index","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA0DeA,EAtDF,WAAO,IAAD,EACf,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BV,mBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KANe,4CAaf,4BAAAC,EAAA,sEACwBC,IAAMC,IAAI,+EADlC,OACUC,EADV,OAEIV,EAAWU,EAAOC,KAAKC,OACvBV,EAAYQ,EAAOC,KAAKC,OAH5B,4CAbe,sBAwBf,OAfAC,qBAAU,YATK,mCAUXC,KACD,IAcC,8BACI,eAACC,EAAA,EAAD,CAAOC,UAAW,QAAlB,UACI,oDACA,uBAAMC,SATlB,SAAiBC,GACbA,EAAEC,iBAEFrB,EADUO,EAAOF,EAAUR,IAOnB,UACI,gCACI,cAACyB,EAAA,EAAD,CAAWC,QAAQ,WAAWC,MAAQ3B,GAAS,IAAc4B,SAAW,SAACL,GAAD,OAAMtB,EAASsB,EAAEM,OAAOF,QAAQG,aAAc,QACtH,cAACC,EAAA,EAAD,CAAaV,UAAW,WAAWK,QAAS,WAAWE,SAAW,SAACL,GAAD,OAAMd,EAAUc,EAAEM,OAAOF,QAA3F,SACI,cAACK,EAAA,EAAD,CAAQC,QAAM,EAAd,SAEYC,OAAOC,KAAK/B,GAASgC,KAAI,SAACT,EAAOU,GAAR,OAAkB,wBAAqBV,MAAQvB,EAAQuB,GAArC,SAA8CA,GAAhCU,aAK7E,gCACI,cAACZ,EAAA,GAAD,GAAWC,QAAQ,YAAnB,wBAAuC,YAAvC,sBAA0DxB,GAAS,KAAnE,IACA,cAAC6B,EAAA,EAAD,CAAaV,UAAW,WAAWO,SAAW,SAACL,GAAD,OAAMZ,EAAUY,EAAEM,OAAOF,QAAvE,SACI,cAACK,EAAA,EAAD,CAAQC,QAAM,EAAd,SACSC,OAAOC,KAAK7B,GAAU8B,KAAI,SAACT,EAAOU,GAAR,OAAkB,wBAAqBV,MAAQvB,EAAQuB,GAArC,SAA8CA,GAAhCU,aAI3E,wBAAQC,KAAM,SAASjB,UAAW,SAASK,QAAS,WAApD,8BCrCLa,MAVf,WAGE,OACE,mCACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d1208e0.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport {FormControl, Paper, Select, TextField} from \"@material-ui/core\";\nimport \"../App.css\";\nimport axios, * as others from 'axios';\nconst Main = () => {\n    const [text1, settext1] = useState(1);\n    const [text2, settext2] = useState(1);\n    const [country, setcountry] = useState([]);\n    const [country2, setcountry2] = useState([]);\n    const [value1, setvalue1] = useState(1);\n    const [value2, setvalue2] = useState(1);\n\n\n    useEffect(() => {\n        getdata();\n    }, [])\n\n    async function getdata(){\n        const result =await axios.get(\"http://data.fixer.io/api/latest?access_key=a40280486ed6ce275ad7a4a044f05c7e\");\n        setcountry(result.data.rates);\n        setcountry2(result.data.rates);\n    }\n\n    function convert(e){\n        e.preventDefault();\n        let num= (value2/value1) * text1;\n        settext2(num);\n    }\n    return (\n        <div>\n            <Paper className= \"paper\">\n                <h3>Currency Converter</h3>\n                <form onSubmit= {convert}>\n                    <div>\n                        <TextField variant='outlined' value= {text1 || \" \"  || {  }} onChange= {(e)=> settext1(e.target.value)} autoComplete= \"off\"/>\n                        <FormControl className= \"dropdown\" variant= 'outlined' onChange= {(e)=> setvalue1(e.target.value)}>\n                            <Select native>\n                                    {\n                                        Object.keys(country).map((value, index)=>( <option key= {index} value= {country[value]}>{value}</option>))\n                                    }\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <TextField variant='outlined' variant= 'outlined' value= {text2 || \" \" || {  }}/>\n                        <FormControl className= \"dropdown\" onChange= {(e)=> setvalue2(e.target.value)}>\n                            <Select native>\n                                    {Object.keys(country2).map((value, index)=> (<option key= {index} value= {country[value]}>{value}</option>))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <button type= \"submit\" className= \"button\" variant= \"cotained\">Convert</button>\n                </form>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  \n\n  return (\n    <>\n      <Main/>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}